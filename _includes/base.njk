<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Sintoniza Latina Live, tu radio online con la mejor m√∫sica. Escucha en vivo, pide tus canciones favoritas y conecta con tu alma a trav√©s de la m√∫sica.">
    
    <title>{{ title }}</title>
    
    <!-- Hoja de estilos de Sakura (para el tema claro y oscuro) -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sakura.css/css/sakura.css" type="text/css">
    <link rel="stylesheet" href="/css/custom.css">
    <link rel="icon" href="favicon.ico" type="image/x-icon">

    <!-- Estilos para el bot√≥n de cambio de tema -->
    <style>
        #theme-toggle {
            position: fixed; top: 15px; right: 15px;
            background-color: #f0f0f0; border: 1px solid #ccc;
            border-radius: 50%; width: 45px; height: 45px;
            cursor: pointer; font-size: 20px; z-index: 1000;
        }
        body.dark #theme-toggle {
            background-color: #333; border-color: #555; color: #fff;
        }
    </style>
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "RadioBroadcastService",
  "name": "Latina Live",
  "description": "Tu alma, tu m√∫sica. La radio online con la mejor m√∫sica latina y una comunidad vibrante.",
  "url": "https://latina.ahmrs.net/",
  "image": "https://latina.ahmrs.net/logo.jpg",
  "broadcastFrequency": "online"
}
</script>
<!-- Open Graph / Facebook -->
<meta property="og:type" content="website">
<meta property="og:url" content="https://latina.ahmrs.net/">
<meta property="og:title" content="Latina Live - tu alma, tu m√∫sica">
<meta property="og:description" content="Sintoniza en vivo la mejor m√∫sica, pide tus canciones y conecta con nuestra comunidad.">
<meta property="og:image" content="https://latina.ahmrs.net/logo.jpg">

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image">
<meta property="twitter:url" content="https://latina.ahmrs.net/">
<meta property="twitter:title" content="Latina Live - tu alma, tu m√∫sica">
<meta property="twitter:description" content="Sintoniza en vivo la mejor m√∫sica, pide tus canciones y conecta con nuestra comunidad.">
<meta property="twitter:image" content="https://latina.ahmrs.net/logo.jpg">
</head>

<!-- A√±adimos una clase 'light' por defecto al body para controlar el tema -->
<body class="light">

    <!-- BOT√ìN PARA CAMBIAR EL TEMA -->
    <button id="theme-toggle" aria-label="Cambiar entre tema claro y oscuro">üåô</button>

    <!-- La cabecera se mantiene igual en todas las p√°ginas -->
    <header class="welcome-section">
        <h2>¬°Latina Live!</h2>
        <img src="/logo.jpg" alt="Un micr√≥fono encantador con una sonrisa c√°lida...">
        <p>¬°Bienvenido a tu apertura auditiva! ...</p>
<p>La m√∫sica es tan antigua como el hombre y tan importante como el ox√≠geno. Desde que el mundo es mundo hemos usado la m√∫sica con diferentes finalidades: el placer, la motivaci√≥n, las batallas, los rituales. Hombre y arte se necesitan para existir, el primero para admirarla y la segunda para ser sublimada en sus usos. Los esclavos, en sus danzas han ocultado t√°cticas para huir de sus captores, en sus peinados mapas y en sus ropas armas. La m√∫sica es un legado, es historia, es cultura. Por esto estamos nosotros aqu√≠, dispuestos a abrirte los o√≠dos, a hacerte consciente de que si se viaja en cada libro, se visita en cada canci√≥n un trozo distinto de nosotros. Latina Live ha llegado para mostrarte tu alma, tu m√∫sica, para llevarte por los pasadizos m√°s oscuros de las melod√≠as hasta los claros m√°s dulces y reverdecidos de la misma. La pregunta no es si quieres escucharnos, la pregunta es: ¬øQuieres escucharte a ti?
</p>
    </header>

    <!-- Aqu√≠ Eleventy inyectar√° el contenido de cada p√°gina -->
    {{ content | safe }}

    <!-- El pie de p√°gina se mantiene igual en todas las p√°ginas -->
    <footer class="site-footer">
        <p>&copy; 2025 Latina Live</p>
    </footer>
    
    <!-- Placeholder para Font Awesome -->
    <script src="https://kit.fontawesome.com/your_fontawesome_kit.js" crossorigin="anonymous"></script>

    <!-- ======================================================= -->
    <!--  SCRIPT UNIFICADO Y MEJORADO PARA TODA LA APLICACI√ìN   -->
    <!-- ======================================================= -->
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        
        // --- L√ìGICA DEL CAMBIADOR DE TEMA ---
        const themeToggle = document.getElementById('theme-toggle');
        const body = document.body;

        // Funci√≥n para aplicar el tema (claro u oscuro)
        const applyTheme = (theme) => {
            if (theme === 'dark') {
                body.classList.remove('light');
                body.classList.add('dark');
                themeToggle.textContent = '‚òÄÔ∏è'; // √çcono de sol
            } else {
                body.classList.remove('dark');
                body.classList.add('light');
                themeToggle.textContent = 'üåô'; // √çcono de luna
            }
        };

        // Al cargar la p√°gina, aplicar el tema guardado en el navegador
        const storedTheme = localStorage.getItem('theme') || 'light';
        applyTheme(storedTheme);

        // Cuando se hace clic en el bot√≥n, cambiar el tema y guardarlo
        themeToggle.addEventListener('click', () => {
            const newTheme = body.classList.contains('light') ? 'dark' : 'light';
            applyTheme(newTheme);
            localStorage.setItem('theme', newTheme);
        });


        // --- L√ìGICA DEL REPRODUCTOR DE AUDIO ---
        const audio = document.getElementById('audio');
        
        // ¬°IMPORTANTE! Este c√≥digo SOLO se ejecuta si encuentra el reproductor en la p√°gina.
        // As√≠ no dar√° error en las p√°ginas que no lo tengan (como contacto.html).
        if (audio) {
            const trackInfo = document.getElementById('track-info');
            const volumeDisplay = document.getElementById('volume-display');
            const lowerVolumeBtn = document.getElementById('lowerVolumeBtn');
            const raiseVolumeBtn = document.getElementById('raiseVolumeBtn');

            const streamUrl = "https://ahmrs.net/listen/latina/live";
            audio.src = streamUrl;
            audio.volume = 0.2; // Volumen inicial

            function updateVolumeDisplay() {
                if (volumeDisplay) {
                    volumeDisplay.textContent = `Volumen: ${Math.round(audio.volume * 100)}%`;
                }
            }

            async function fetchMetadata() {
                if (!trackInfo) return;
                try {
                    // Petici√≥n a la API m√°s limpia
                    const response = await fetch('https://ahmrs.net/api/nowplaying/1');
                    if (!response.ok) throw new Error(`Error de red: ${response.status}`);
                    
                    const data = await response.json();
                    
                    // Usamos optional chaining (?.) para evitar errores si la API no devuelve la info completa
                    const songTitle = data.now_playing?.song?.title || "Sin informaci√≥n";
                    const songArtist = data.now_playing?.song?.artist || "Desconocido";

                    trackInfo.textContent = `Escuchando: ${songArtist} - ${songTitle}`;
                } catch (error) {
                    trackInfo.textContent = "Informaci√≥n de la canci√≥n no disponible.";
                    console.error("Error al obtener los metadatos:", error);
                }
            }

            // A√ëADIMOS LOS EVENTOS A LOS BOTONES CON JAVASCRIPT
            lowerVolumeBtn.addEventListener('click', () => {
                audio.volume = Math.max(0, audio.volume - 0.1);
                updateVolumeDisplay();
            });

            raiseVolumeBtn.addEventListener('click', () => {
                audio.volume = Math.min(1, audio.volume + 0.1);
                updateVolumeDisplay();
            });

            // Iniciar todo
            updateVolumeDisplay();
            fetchMetadata();
            setInterval(fetchMetadata, 15000); // Actualizar cada 15 segundos
            audio.play().catch(e => console.warn("La reproducci√≥n autom√°tica fue bloqueada. El usuario debe iniciarla manualmente.", e));
        
        } // Fin del if(audio)

    });
async function loadNewReleases() {
  const container = document.getElementById('new-releases-container');
  try {
    // Llamamos a NUESTRA PROPIA funci√≥n en Render. La ruta es /.netlify/functions/nombre-archivo
    // Render usa la convenci√≥n de Netlify para esto.
    const response = await fetch('/.netlify/functions/get-new-releases');
    const albums = await response.json();

    // Limpiamos el mensaje de "Cargando..."
    container.innerHTML = ''; 

    // Creamos el HTML para cada √°lbum
    albums.forEach(album => {
      const albumElement = document.createElement('div');
      albumElement.style.marginBottom = '15px'; // Un poco de estilo
      albumElement.innerHTML = `
        <a href="${album.external_urls.spotify}" target="_blank" style="display: flex; align-items: center; text-decoration: none; color: inherit;">
          <img src="${album.images[1].url}" alt="${album.name}" width="64" height="64" style="margin-right: 10px;">
          <div>
            <strong>${album.name}</strong><br>
            <span>${album.artists.map(artist => artist.name).join(', ')}</span>
          </div>
        </a>
      `;
      container.appendChild(albumElement);
    });

  } catch (error) {
    container.innerHTML = '<p>No se pudieron cargar las novedades. Int√©ntalo m√°s tarde.</p>';
    console.error('Error al cargar el widget de Spotify:', error);
  }
}

// Llamamos a la funci√≥n cuando la p√°gina cargue
loadNewReleases();
    </script>
</body>
</html>```
